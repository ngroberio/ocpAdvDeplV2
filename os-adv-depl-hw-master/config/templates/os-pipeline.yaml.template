apiVersion: v1
items:
- kind: "BuildConfig"
  apiVersion: "v1"
  metadata:
    name: "os-pipeline"
  spec:
    triggers:
          - github:
              secret: l3wUgp0o
            type: GitHub
          - generic:
              secret: CNMLKIk6
            type: Generic
    strategy:
      type: "JenkinsPipeline"
      jenkinsPipelineStrategy:
        jenkinsfile: |
          node {
            stage ("Build")
                 echo '*** Build Starting ***'
                 openshiftBuild bldCfg: 'os-tasks', buildName: '', checkForTriggeredDeployments: 'false', commitID: '', namespace: '', showBuildLogs: 'false', verbose: 'false', waitTime: ''
                 openshiftVerifyBuild apiURL: 'https://openshift.default.svc.cluster.local', authToken: '', bldCfg: 'os-tasks', checkForTriggeredDeployments: 'false', namespace: '', verbose: 'false'
                 echo '*** Build Complete ***'

            stage ("Deploy and Verify in Development Env")

                 echo '*** Deployment Starting ***'
                 openshiftDeploy apiURL: 'https://openshift.default.svc.cluster.local', authToken: '', depCfg: 'os-tasks', namespace: '', verbose: 'false', waitTime: ''
                 openshiftVerifyDeployment apiURL: 'https://openshift.default.svc.cluster.local', authToken: '', depCfg: 'os-tasks', namespace: '', replicaCount: '1', verbose: 'false', verifyReplicaCount: 'false', waitTime: ''
                 echo '*** Deployment Complete ***'

                 echo '*** Service Verification Starting ***'
                 openshiftVerifyService apiURL: 'https://openshift.default.svc.cluster.local', authToken: '', namespace: 'os-tasks-{GUID}-dev', svcName: 'os-tasks', verbose: 'false'
                 echo '*** Service Verification Complete ***'
                 openshiftTag(srcStream: 'os-tasks', srcTag: 'latest', destStream: 'os-tasks', destTag: 'testready')

            stage ('Deploy and Test in Testing Env')
                 echo '*** Deploy testready build in os-tasks-{GUID}-test project  ***'
                 openshiftDeploy apiURL: 'https://openshift.default.svc.cluster.local', authToken: '', depCfg: 'os-tasks', namespace: 'os-tasks-{GUID}-test', verbose: 'false', waitTime: ''

                 openshiftVerifyDeployment apiURL: 'https://openshift.default.svc.cluster.local', authToken: '', depCfg: 'os-tasks', namespace: 'os-tasks-{GUID}-test', replicaCount: '1', verbose: 'false', verifyReplicaCount: 'false', waitTime: '10'

            stage ('Promote and Verify in Production Env')
                 echo '*** Waiting for Input ***'
                 input 'Should we deploy to Production?'
                 openshiftTag(srcStream: 'os-tasks', srcTag: 'testready', destStream: 'os-tasks', destTag: 'prodready')
                 echo '*** Deploying to Production ***'
                 openshiftDeploy apiURL: 'https://openshift.default.svc.cluster.local', authToken: '', depCfg: 'os-tasks', namespace: 'os-tasks-{GUID}-prod', verbose: 'false', waitTime: ''
                 openshiftVerifyDeployment apiURL: 'https://openshift.default.svc.cluster.local', authToken: '', depCfg: 'os-tasks', namespace: 'os-tasks-{GUID}-prod', replicaCount: '1', verbose: 'false', verifyReplicaCount: 'false', waitTime: '10'
                 sleep 30
                 sh 'curl -i -u "redhat:redhat1!" -H "Content-Length: 0" -X POST http://os-tasks-os-tasks-{GUID}-dev.apps.{GUID}.example.opentlc.com/ws/tasks/task1 | grep Created'
            
          }

kind: List
metadata: {}
